declare const Tech: any;
export declare class Youtube extends Tech {
    static isApiReady: boolean;
    static apiReadyQueue: Youtube[];
    ytPlayer: any;
    options: any;
    loadingYouTubeCaptions: boolean;
    captionLangPending: string | null;
    prefCaptionsSize: string;
    constructor(options: any, ready: any);
    dispose(): void;
    createEl(): HTMLDivElement;
    initYTPlayer(): void;
    onPlayerApiChange(): void;
    onPlayerReady(): void;
    onPlayerPlaybackQualityChange(): void;
    onPlayerPlaybackRateChange(): void;
    onPlayerStateChange(e: any): void;
    onPlayerVolumeChange(): void;
    onPlayerError(e: any): void;
    error(): {
        code: any;
        message: string;
    };
    loadVideoById_(id: string): void;
    cueVideoById_(id: string): void;
    src(src: string): any;
    poster(): any;
    setPoster(poster: string): void;
    setSrc(source: any, someBool?: boolean): void;
    autoplay(): any;
    setAutoplay(val: number): void;
    loop(): any;
    setLoop(val: number): void;
    play(): void;
    pause(): void;
    paused(): boolean;
    currentTime(): any;
    setCurrentTime(seconds: number): void;
    seeking(): any;
    seekable(): any;
    onSeeked(): void;
    playbackRate(): any;
    setPlaybackRate(suggestedRate: number): void;
    duration(): any;
    currentSrc(): any;
    ended(): boolean;
    volume(): number;
    setVolume(percentAsDecimal: number): void;
    muted(mute?: boolean): any;
    setMuted(mute: boolean): void;
    buffered(): any;
    preload(): void;
    load(): void;
    reset(): void;
    networkState(): 1 | 0 | 2;
    readyState(): 1 | 0 | 2 | 4;
    supportsFullScreen(): any;
    checkHighResPoster(): void;
}
export {};
